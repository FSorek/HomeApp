@page "/books"
@using MediatR
@using Application.Requests
@using BookRecommendations.Entities
@inject IMediator Mediator;

<MudContainer Fixed="true">
    <MudStack>
        <MudText Typo="Typo.h2">Check out those books!</MudText>
        @foreach (var bookEntry in _bookEntries)
        {
            <BookEntryDisplay BookEntry="bookEntry"/>
            <MudDivider Class="mb-3" DividerType="DividerType.Inset"/>
        }
    </MudStack>
</MudContainer>
@code {
    private BookEntry[] _bookEntries = Array.Empty<BookEntry>();
    protected override async Task OnInitializedAsync()
    {
        var booksRequest = new GetAllBooksRequest();
        var currentBooks = await Mediator.Send(booksRequest);
        _bookEntries = currentBooks.ToArray();
        var bookDetailsTasks = _bookEntries.Select(b =>
        {
            var request = new GetBookDetailsRequest(b.GoogleBookId);
            return Mediator.Send(request).ContinueWith(task =>
            {
                b.BookDetails = task.Result;
            });
        });
        await Task.WhenAll(bookDetailsTasks);
    }
}