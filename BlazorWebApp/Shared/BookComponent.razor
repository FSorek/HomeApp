@using Application.DTOs.External
@using Application.Requests
@using MediatR
@inject IMediator Mediator;
<div class="book-layout">
    @if (_googleBook == null)
    {
        <div>Loading..</div>
    }
    else
    {
        <div class="book-title">
            @_googleBook!.Title
        </div>
        <div class="book-image">
            <img src="@_googleBook!.ThumbnailUrl" alt="pic"/>
        </div>
        <div class="book-description">
            @((MarkupString) _googleBook!.Description)
        </div>
        <div class="book-author">
            @if (_googleBook.Authors.Any())
            {
                <p>~@string.Join(", ", _googleBook.Authors)</p>
            }
        </div>
    }
</div>
@code {

    [Parameter]
    public string GoogleId { get; set; } = "some-id";

    [Parameter]
    public string MyOpinion { get; set; } = "Comment..";

    private GoogleBookDto? _googleBook;
    protected override async Task OnInitializedAsync()
    {
        if (_googleBook == null)
        {
            var bookRequest = new GetGoogleBookRequest(GoogleId);
            _googleBook = await Mediator.Send(bookRequest);
        }
        await base.OnInitializedAsync();
    }
}